#cloud-config

package_update: true
package_upgrade: true

packages:
  # - fail2ban
  - apt-transport-https
  - ca-certificates
  - curl
  - gnupg-agent
  - software-properties-common
  - gcc
  - g++
  - make
  - ufw
  - snapd  # needed for certbot
  - mosquitto
  - mosquitto-clients
  - docker.io
  - docker-compose
  - nginx

groups:
  - docker

users:
  - name: baden
    groups: users, admin
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCin+5nnsY5/3YGpKaFAvVFVTyZZab25QRrJClDn1onZc4bG4iGigP7D81PsUL713N4CZAh3cHhmy4QSgYoEHwpREsG55k1Io9Z5XywyvEM1Xf1BPVzDcBydyqC6GXuQc4l8Igx8iM5jE4sYgTlbPAUdxNbNp2vcBAXNYQ1o60aHuHCWstNVci0/ydJ60rhiX6GKRdRby1+WhQx6e9kxm9OglKJIrHiLtVNcka9tKbT51qFxDk5L2Z2qjec5qptjmPWfqgOSwxhYo6CSOAF6uWyMPjkuBDtG5FYSqDHnZuGpfgMrYaPg08yGgUWCWUdIwCdvsfVblD5FM8uSp2P2Cikre8TZ1Ef6hlZDwghb24mh4C4mIgCCZ+q/eeH/Z9Lej0+MjI3T2UEhmva6I8kXPeUwPrQf7Je13ikH8Z1PgySdVjgfVleodvQUV6RCL/pSfXV8UUCwM8mGAqYLpCXEA4s2qoplthh11/jIfzJR0Psu61JOh9CMYPz4OWUnoIu05c= baden@Mac-mini-Denys.local

  - name: mqtt
    passwd: "$6$ffr58dRGsd98iyh4$DO.7mGzk8JIHEBaPZUOkYo8WvMu8KB5p0xjB14mFNvyATNPctqUnTIoKZce.ip/.a30r3abvGdfuvmAarHdcu."
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    lock_passwd: false

write_files:
  - path: /etc/mosquitto/conf.d/websocket.conf
    content: |
      listener 1883
      listener 9001
      protocol websockets
      allow_anonymous true
  - path: /etc/nginx/sites-available/charger-nginx
    content: |
      log_format  charger_log  '$remote_addr - [$time_local] "$request" '
                        '$status ($body_bytes_sent) "$http_referer" '
                        '"$http_user_agent" [$request_time $upstream_response_time] 1:$gzip_ratio ($cookie_access_token)';

      # upstream charger_tcp {
      #     server 127.0.0.1:8001 fail_timeout=0;
      # }

      upstream charger_ws {
          server 127.0.0.1:9001 fail_timeout=0;
      }

      map $http_upgrade $connection_upgrade {
          default upgrade;
          ''      close;
      }

      server {
          listen   80;

          server_name charger.navi.cc;

          expires -1; # yes no need caching at all

          # API
          # location /1.0/ {
          #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #     proxy_set_header X-Real-IP  $remote_addr;
          #     proxy_set_header Host $http_host;
          #     proxy_set_header X-NginX-Proxy true;
          #     proxy_redirect off;
          #     proxy_pass http://charger_api;
          #     access_log /var/log/nginx/delfast-charger/api-access.log charger_log;
          # }

          # raw TCP port
          # location ~* ^/(info|addlog|config|params|firmware|data).* {
          #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          #     proxy_set_header X-Real-IP  $remote_addr;
          #     proxy_set_header Host $http_host;
          #     proxy_set_header X-NginX-Proxy true;
          #     proxy_redirect off;
          #     proxy_pass http://charger_tcp;
          #     access_log /var/log/nginx/delfast-charger/tcp-access.log charger_log;
          #     # error_log /home/baden/SDK/newgps.navi.cc/logs/tcp-access.log charger_log;
          # }

          # Websocket
          location /mqtt {
              proxy_pass http://charger_ws;
              proxy_read_timeout 950s;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              access_log /var/log/nginx/delfast-charger/ws-access.log charger_log;
          }

          # WEB
          root /home/baden/delfast-charger/web;
          index index.html index.htm;
          #
          location / {
              expires -1; # yes no need caching at all
              # First attempt to serve request as file, then
              # as directory, then fall back to index.html
              #rewrite ^(.*)#.*$ $1;
              try_files $uri $uri.html $uri/ /index.html;
              access_log /var/log/nginx/delfast-charger/www-access.log charger_log;
          }
      }

runcmd:
  - ufw allow OpenSSH
  - ufw allow 80/tcp
  - ufw allow 443/tcp
  - ufw allow 3000/tcp
  - ufw allow 1883/tcp
  - ufw allow 1884/tcp
  - ufw allow 9001/tcp
  - ufw allow 9002/tcp
  - ufw allow 27017/tcp
  - ufw enable
  - curl -fsSL https://pgp.mongodb.com/server-6.0.asc | gpg -o /usr/share/keyrings/mongodb-server-6.0.gpg --dearmor
  - echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-6.0.gpg ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-6.0.list
  - curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
  - apt-get update
  - apt-get install -y  mongodb-org nodejs
  - curl -fsSL https://deno.land/x/install/install.sh | sudo -u baden sh
  - echo 'export DENO_INSTALL="/home/baden/.deno"' | sudo -u baden tee -a /home/baden/.bashrc
  - echo 'export PATH="$DENO_INSTALL/bin:$PATH"' | sudo -u baden tee -a /home/baden/.bashrc
  - service mosquitto restart
  - mkdir -p /var/log/nginx/delfast-charger
  - chown -R root:adm /var/log/nginx/delfast-charger
  - unlink /etc/nginx/sites-enabled/default
  - ln -s /etc/nginx/sites-available/charger-nginx /etc/nginx/sites-enabled/charger-nginx
  - service nginx restart
  - snap install core
  - snap refresh core
  - sudo snap install --classic certbot
  - ln -s /snap/bin/certbot /usr/bin/certbot 